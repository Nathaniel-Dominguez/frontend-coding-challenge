{"ast":null,"code":"var _jsxFileName = \"/Users/nathanieldominguez/Projects/frontend-coding-challenge/go-fund-stuff/pages/p/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { useRouter } from 'next/router';\nimport Markdown from 'react-markdown';\nimport Layout from '../../components/MyLayout.js';\nexport default (function () {\n  var router = useRouter();\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"jsx-1805735624\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, router.query.id), React.createElement(\"div\", {\n    className: \"jsx-1805735624\" + \" \" + 'markdown',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Markdown, {\n    source: \"\\n\\t\\t\\t\\t\\tThis is our campaign post.\\n\\t\\t\\t\\t\\tYes. We can have a [link](/link).\\n\\t\\t\\t\\t\\tAnd we can have a title as well.\\n\\n\\t\\t\\t\\t\\t### This is a title\\n\\n\\t\\t\\t\\t\\tAnd here's the content.\\n\\t\\t\\t\\t\\t\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })), React.createElement(_JSXStyle, {\n    id: \"1805735624\",\n    __self: this\n  }, \".markdown{font-family:'Arial';}.markdown a{-webkit-text-decoration:none;text-decoration:none;color:blue;}.markdown a:hover{opacity:0.6;}.markdown h3{margin:0;padding:0;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9uYXRoYW5pZWxkb21pbmd1ZXovUHJvamVjdHMvZnJvbnRlbmQtY29kaW5nLWNoYWxsZW5nZS9nby1mdW5kLXN0dWZmL3BhZ2VzL3AvW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQnNCLEFBRzBCLEFBSUMsQUFLVCxBQUlILFNBQ0MsR0FKWCxPQUswQixDQWQxQix3QkFlQSxNQVhZLFdBQ1oiLCJmaWxlIjoiL1VzZXJzL25hdGhhbmllbGRvbWluZ3Vlei9Qcm9qZWN0cy9mcm9udGVuZC1jb2RpbmctY2hhbGxlbmdlL2dvLWZ1bmQtc3R1ZmYvcGFnZXMvcC9baWRdLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xuaW1wb3J0IE1hcmtkb3duIGZyb20gJ3JlYWN0LW1hcmtkb3duJztcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9NeUxheW91dC5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcblx0Y29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG5cdHJldHVybiAoXG5cdFx0PExheW91dD5cblx0XHRcdDxoMT57cm91dGVyLnF1ZXJ5LmlkfTwvaDE+XG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nbWFya2Rvd24nPlxuXHRcdFx0XHQ8TWFya2Rvd24gc291cmNlPXtgXG5cdFx0XHRcdFx0VGhpcyBpcyBvdXIgY2FtcGFpZ24gcG9zdC5cblx0XHRcdFx0XHRZZXMuIFdlIGNhbiBoYXZlIGEgW2xpbmtdKC9saW5rKS5cblx0XHRcdFx0XHRBbmQgd2UgY2FuIGhhdmUgYSB0aXRsZSBhcyB3ZWxsLlxuXG5cdFx0XHRcdFx0IyMjIFRoaXMgaXMgYSB0aXRsZVxuXG5cdFx0XHRcdFx0QW5kIGhlcmUncyB0aGUgY29udGVudC5cblx0XHRcdFx0XHRgfVxuXHRcdFx0XHQvPlxuXHRcdFx0PC9kaXY+XG5cdFx0XHQ8c3R5bGUganN4IGdsb2JhbD57YFxuXHRcdFx0XHQubWFya2Rvd24ge1xuXHRcdFx0XHRcdGZvbnQtZmFtaWx5OiAnQXJpYWwnO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Lm1hcmtkb3duIGEge1xuXHRcdFx0XHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0XHRcdFx0XHRjb2xvcjogYmx1ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC5tYXJrZG93biBhOmhvdmVyIHtcblx0XHRcdFx0XHRvcGFjaXR5OiAwLjY7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQubWFya2Rvd24gaDMge1xuXHRcdFx0XHRcdG1hcmdpbjogMDtcblx0XHRcdFx0XHRwYWRkaW5nOiAwO1xuXHRcdFx0XHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdFx0XHRcdH1cblx0XHRcdGB9PC9zdHlsZT5cblx0XHQ8L0xheW91dD5cblx0KTtcbn07XG5cbi8qXG5ob3cgdG8gbG9hZCBkYXRhIGZyb20gYW4gYXBpIGZvciBkeW5hbWljIHBhZ2VzIG9mIGluZm8gXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvTXlMYXlvdXQuanMnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5cbmNvbnN0IFBvc3QgPSBwcm9wcyA9PiAoXG5cdDxMYXlvdXQ+XG5cdFx0PGgxPntwcm9wcy5zaG93Lm5hbWV9PC9oMT5cblx0XHQ8cD57cHJvcHMuc2hvdy5zdW1tYXJ5LnJlcGxhY2UoLzxbL10/cC9nLCAnJyl9PC9wPlxuXHRcdDxpbWcgc3JjPXtwcm9wcy5zaG93LmltYWdlLm1lZGl1bX0gLz5cblx0PC9MYXlvdXQ+XHRcbik7XG5cblBvc3QuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oY29udGV4dCkge1xuXHRjb25zdCB7IGlkIH0gPSBjb250ZXh0LnF1ZXJ5O1xuXHRjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zaG93cy8ke2lkfWApO1xuXHRjb25zdCBzaG93ID0gYXdhaXQgcmVzLmpzb24oKTtcblxuXHRjb25zb2xlLmxvZyhgRmV0Y2hlZCBzaG93OiAke3Nob3cubmFtZX1gKTtcblxuXHRyZXR1cm4geyBzaG93IH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBQb3N0O1xuKi8iXX0= */\\n/*@ sourceURL=/Users/nathanieldominguez/Projects/frontend-coding-challenge/go-fund-stuff/pages/p/[id].js */\"));\n});\n/*\nhow to load data from an api for dynamic pages of info \nimport Layout from '../../components/MyLayout.js';\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = props => (\n\t<Layout>\n\t\t<h1>{props.show.name}</h1>\n\t\t<p>{props.show.summary.replace(/<[/]?p/g, '')}</p>\n\t\t<img src={props.show.image.medium} />\n\t</Layout>\t\n);\n\nPost.getInitialProps = async function(context) {\n\tconst { id } = context.query;\n\tconst res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n\tconst show = await res.json();\n\n\tconsole.log(`Fetched show: ${show.name}`);\n\n\treturn { show };\n};\n\nexport default Post;\n*/","map":{"version":3,"sources":["/Users/nathanieldominguez/Projects/frontend-coding-challenge/go-fund-stuff/pages/p/[id].js"],"names":["useRouter","Markdown","Layout","router","query","id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA,gBAAe,YAAM;AACpB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,SACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,MAAM,CAACC,KAAP,CAAaC,EAAlB,CADD,EAEC;AAAA,wCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,QAAD;AAAU,IAAA,MAAM,qNAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFD;AAAA;AAAA;AAAA,y4FADD;AAqCA,CAvCD;AAyCA","sourcesContent":["import { useRouter } from 'next/router';\nimport Markdown from 'react-markdown';\nimport Layout from '../../components/MyLayout.js';\n\nexport default () => {\n\tconst router = useRouter();\n\treturn (\n\t\t<Layout>\n\t\t\t<h1>{router.query.id}</h1>\n\t\t\t<div className='markdown'>\n\t\t\t\t<Markdown source={`\n\t\t\t\t\tThis is our campaign post.\n\t\t\t\t\tYes. We can have a [link](/link).\n\t\t\t\t\tAnd we can have a title as well.\n\n\t\t\t\t\t### This is a title\n\n\t\t\t\t\tAnd here's the content.\n\t\t\t\t\t`}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<style jsx global>{`\n\t\t\t\t.markdown {\n\t\t\t\t\tfont-family: 'Arial';\n\t\t\t\t}\n\n\t\t\t\t.markdown a {\n\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\tcolor: blue;\n\t\t\t\t}\n\n\t\t\t\t.markdown a:hover {\n\t\t\t\t\topacity: 0.6;\n\t\t\t\t}\n\n\t\t\t\t.markdown h3 {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t\tpadding: 0;\n\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t}\n\t\t\t`}</style>\n\t\t</Layout>\n\t);\n};\n\n/*\nhow to load data from an api for dynamic pages of info \nimport Layout from '../../components/MyLayout.js';\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = props => (\n\t<Layout>\n\t\t<h1>{props.show.name}</h1>\n\t\t<p>{props.show.summary.replace(/<[/]?p/g, '')}</p>\n\t\t<img src={props.show.image.medium} />\n\t</Layout>\t\n);\n\nPost.getInitialProps = async function(context) {\n\tconst { id } = context.query;\n\tconst res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n\tconst show = await res.json();\n\n\tconsole.log(`Fetched show: ${show.name}`);\n\n\treturn { show };\n};\n\nexport default Post;\n*/"]},"metadata":{},"sourceType":"module"}